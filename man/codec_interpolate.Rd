% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cincy_interpolate.R
\name{codec_interpolate}
\alias{codec_interpolate}
\title{Spatially interpolate community-level data}
\usage{
codec_interpolate(
  from,
  to = c("neigh", "zcta", "bg"),
  weights = c("pop", "homes", "area")
)
}
\arguments{
\item{from}{a CoDEC data package}

\item{to}{character string naming a target geography}

\item{weights}{which census block-level weights to use; see details}
}
\value{
a tibble with a new geographic identifier column for the \code{to} target geography (\code{geoid})
in addition to the (interpolated) columns in \code{from}
}
\description{
Census block-level weights are used to spatially interpolate CoDEC data packages from 2020
census tract geographies to 2020 neighborhoods (\code{neigh}), ZIP code tabulation areas (\code{zcta}), or block groups (\code{bg}).
}
\details{
Block-level total population (\code{pop}), total number of homes (\code{homes}), or total land area (\code{area})
from the 2020 Census can be chosen to use for the weights.
Geospatial intersection happens after transforming geographies to epsg:5072.
See \code{codec_as_sf()} for adding geography to a CoDEC data package.
Variables beginning with "n_" are interpolated using a weighted sum;
all other variables are interpolated using a weighted mean.
}
\examples{
codec_interpolate(from = get_codec_dpkg("acs_measures-v0.1.0"))
# TODO codec_interpolate(from = get_codec_dpkg("property_code_enforcements-v0.2.0"))
}
