% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dpkg.R
\name{dpkg_write}
\alias{dpkg_write}
\title{Write a data package to a folder}
\usage{
dpkg_write(
  x,
  name,
  version,
  dir = getwd(),
  readme_file = fs::path(dir, "README.md"),
  homepage = NULL,
  source_file = NULL
)
}
\arguments{
\item{x}{object to save as a data package}

\item{name}{simple name or identifier for data package}

\item{version}{must be a \code{package_version()} object;
the \href{https://datapackage.org/recipes/data-package-version/}{semantic version} of the data package}

\item{dir}{directory in which to write the data package}

\item{readme_file}{required; the name of a README.md file that
\href{https://datapackage.org/standard/data-package/#description}{describes} the data package;
the \code{title} descriptor for the data package is taken from the first level one header of this file;
defaults to a README.md file within \code{dir}}

\item{source_file}{an optional path to a source file to copy to the data package and
reference in the \code{sources} descriptor}
}
\value{
invisibly, the path to the datapackage.yaml file;
also prints the directory tree of the created data package
}
\description{
Write a \href{https://datapackage.org/standard/data-package/}{data package} with
one \href{https://datapackage.org/standard/data-resource/}{data resource} that
is any R object.
Within \code{dir}, the data package is created as a new folder based on the \code{name} of the object
and will contain a \verb{\{name\}.rds} file and a \code{dataresource.yaml} file
}
\examples{
cat("# My cars", "\n", "This is all about the cars.",
  file = fs::path(tempdir(), "README.md"), sep = "\n"
)
dpkg_write(mtcars, "mtcars", version = "0.1.0", dir = tempdir())
}
